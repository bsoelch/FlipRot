#__ Library of elementar macros #end

#def CHAR_IO 0xffffffffffffffff #end
#def LONG_IO 0xfffffffffffffffe #end

#__ rotation operations #end
#def >>1  rot       #end
#def >>2  >>1  >>1  #end
#def >>4  >>2  >>2  #end
#def >>8  >>4  >>4  #end
#def >>16 >>8  >>8  #end
#def >>32 >>16 >>16 #end

#def <<32 >>32      #end
#def <<16 <<32 >>16 #end
#def <<8  <<16 >>8  #end
#def <<4  <<8  >>4  #end
#def <<2  <<4  >>2  #end
#def <<1  <<2  >>1  #end

#__ flip then rot #end
#def flipRot flip rot #end

#__ flips all bits #end
#def not 
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
flipRot flipRot flipRot flipRot flipRot flipRot flipRot flipRot
#end

#__ sets the lowest bit to 1 #end
#def set
#undef set.jump
swap
set.jump
swap
jumpif 
flip
#label set.jump
#undef set.jump
#end

#__ sets the lowest bit to 0 #end
#def clear set flip #end

#__ macros for clearing/setting the lower N bits #end
#def setrot   set      rot      #end
#def setrot2  setrot   setrot   #end
#def setrot4  setrot2  setrot2  #end
#def setrot8  setrot4  setrot4  #end
#def setrot16 setrot8  setrot8  #end
#def setrot32 setrot16 setrot16 #end

#def set2  setrot2  <<2  #end
#def set4  setrot4  <<4  #end
#def set8  setrot8  <<8  #end
#def set16 setrot16 <<16 #end
#def set32 setrot32 <<32 #end

#def clearrot   clear      rot        #end
#def clearrot2  clearrot   clearrot   #end
#def clearrot4  clearrot2  clearrot2  #end
#def clearrot8  clearrot4  clearrot4  #end
#def clearrot16 clearrot8  clearrot8  #end
#def clearrot32 clearrot16 clearrot16 #end

#def clear2  clearrot2  <<2  #end
#def clear4  clearrot4  <<4  #end
#def clear8  clearrot8  <<8  #end
#def clear16 clearrot16 <<16 #end
#def clear32 clearrot32 <<32 #end

#__ only keep lower 32 bits #end
#def (int) >>32 clear32 <<32 #end

#__ only keep lower 8 bits #end
#def (byte) >>8 clear32 >>32 clear16 >>16 clear8 >>8 #end

